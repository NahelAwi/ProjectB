

Main Plan:
-use segmentation/edge_detection and depth camera to find key points on the "main" object
 and use PCA for rotation angle prediction

-first model: deeplabv3_resnet101
    slow, only 21 classes

second model: maskrcnn_resnet50_fpn
    slower, more classes

-find better model for segmentation.
    try these models from OpenVINO's Model Zoo (by order):
        deeplabv3_mobilenetv2
        instance-segmentation-security-0002
        fastseg-small
        UNet-Mobilenet-V2

-edge detection models to try.
    -Holistically-Nested Edge Detection

Next steps:
    - try edge detection without details. we don't care what is the object, just care about it's orientation
    - can also try segmentation or other AI models that work on the camera (blob) - faster

Later (optimizations):
-if no good model in OpenVINO's Model Zoo, try other pre-trained models and convert them to ".blob"
-if no good pre-trained models, fine tune one.
    














2nd plan (valid only if camera is placed on top of the rotating part of the hand):
-object alignment detection


other less relevant direction:
-find a working YOLO (using depthai-viewer for example) - (.blob)
-ai model for finding key points on objects detected by our YOLO 
-ai for calculating orientationg based on the points above
-check depthai-viewer for correct use of YOLO
